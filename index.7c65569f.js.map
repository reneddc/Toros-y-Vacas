{"mappings":"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","sources":["src/VacasToros.js","src/funcionesJuegoVacasToros.js","src/excepcionesVacasToros.js","src/presenter.js","src/vistas.js"],"sourcesContent":["import FuncionesDeJuego from \"./funcionesJuegoVacasToros\";\nimport ExcepcionesVacasToros from \"./excepcionesVacasToros\";\n\nclass VacasToros{\n\n    constructor(){\n        this.numeroCaracteres;\n        this.numeroIntentos;\n        this.tipoDeCodigo;\n        this.generarCodigoAutomatico;\n        this.intentosRealizados;\n        this.codigoSecreto = [];\n        this.intentoCodigo = [];\n        this.resultadoDeIntento = [];\n        this.Excepciones = new ExcepcionesVacasToros();\n        this.FuncionesJuego = new FuncionesDeJuego();\n    }\n\n    definirNumeroDeCaracteres(numeroCar){\n        numeroCar = this.Excepciones.controlarCantidadDeCaracteres(numeroCar);\n        this.numeroCaracteres = numeroCar;\n    }\n    \n    definirNumeroDeIntentos(numeroInt){\n        numeroInt = this.Excepciones.controlarCantidadDeIntentos(numeroInt);\n        this.numeroIntentos = numeroInt;\n    }\n\n    definirTipoDeCodigo(tipoCod){\n        this.tipoDeCodigo = tipoCod;\n    }\n\n    definirGeneracionDeCodigoAutomatico(genAutomatico){\n        this.generarCodigoAutomatico = genAutomatico;\n    }\n\n    definirCodigoSecretoPorDefault(){\n        this.codigoSecreto = this.FuncionesJuego.generarCodigoSecretoPorDefault(this.numeroCaracteres, this.tipoDeCodigo, this.generarCodigoAutomatico);\n    }\n\n    definirCodigoSecreto(codigoSec){\n        codigoSec = this.FuncionesJuego.convertirCodigoSecretoMayusculas(codigoSec);\n        codigoSec = this.Excepciones.controlarCodigoSecreto(codigoSec, this.numeroCaracteres, this.tipoDeCodigo); \n        this.codigoSecreto = codigoSec;\n    }\n\n    definirIntentosRealizados(){\n        this.intentosRealizados = this.FuncionesJuego.generarIntentosRealizados(this.numeroIntentos);\n    }\n\n    definirConfiguracionTotal(nroCaracteres, numeroInt, tipCodigo, genAutomatico){\n        this.definirNumeroDeCaracteres(nroCaracteres);\n        this.definirNumeroDeIntentos(numeroInt);\n        this.definirTipoDeCodigo(tipCodigo);\n        this.definirGeneracionDeCodigoAutomatico(genAutomatico);\n        this.definirCodigoSecretoPorDefault();\n        this.definirIntentosRealizados();\n    }\n\n    definirIntento(intentoCodigo){\n        intentoCodigo = this.FuncionesJuego.convertirCodigoSecretoMayusculas(intentoCodigo);\n        this.intentoCodigo = intentoCodigo;\n        this.definirResultadoDeIntento();\n        this.definirIntentosRealizados();\n    }\n\n    definirResultadoDeIntento(){\n        this.resultadoDeIntento = this.Excepciones.controlarCodigoSecreto(this.intentoCodigo, this.numeroCaracteres, this.tipoDeCodigo);\n        this.resultadoDeIntento = this.FuncionesJuego.generarResultadoDeIntento(this.numeroCaracteres, this.resultadoDeIntento, this.codigoSecreto, this.intentoCodigo);\n    }\n\n    getNumeroDeCaracteres(){\n        return this.numeroCaracteres;\n    }\n    \n    getNumeroDeIntentos(){\n        return this.numeroIntentos;\n    }\n\n    getTipoDeCodigo(){\n        return this.tipoDeCodigo;\n    }\n\n    getCodigoSecreto(){\n        return this.codigoSecreto;\n    }\n\n    getResultadoDeIntento(){\n        return this.resultadoDeIntento;\n    }\n\n    getIntentosRealizados(){\n        return this.intentosRealizados;\n    }\n\n    comprobarJuego(){\n        return this.FuncionesJuego.comprobarGanador(this.numeroCaracteres, this.numeroIntentos);\n    }\n}\n\nexport default VacasToros;","class FuncionesDeJuego{\n\n    constructor(){\n        this.numeroIntentosRealizados;\n        this.numeroToros = 0;\n        this.codigoSecretoAutomatico = [];\n        this.listaRepetidos = [];\n    }\n\n    convertirCodigoSecretoMayusculas(codigoSec){\n        for(var i = 0; i < codigoSec.length; i++){\n            codigoSec[i] = codigoSec[i].toString().toUpperCase();\n        }\n        return codigoSec;\n    }\n    \n    generarCaracterNumerico(){\n        return (Math.floor(Math.random() * 10)).toString();\n    }\n\n    generarCaracterLetra(){\n        const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        return alphabet[Math.floor(Math.random() * alphabet.length)]\n    }\n\n    generarCaracterLetraNumero(){\n        let letraNumero = Math.floor(Math.random() * 2);\n        if(letraNumero == 0){\n            return this.generarCaracterLetra();\n        }\n        return this.generarCaracterNumerico();\n    }\n\n    generarCodigoSecretoAut(numeroCaracteres, tipoCodigo){\n        this.codigoSecretoAutomatico = [];\n        let caracter;\n        for(var i = 0; i < numeroCaracteres; i++){\n            switch(tipoCodigo){\n                case \"Numeros\":{caracter = this.generarCaracterNumerico();break;}\n                case \"Letras\": {caracter = this.generarCaracterLetra();break;}\n                case \"Combinado\": {caracter = this.generarCaracterLetraNumero();break;}\n            }\n            this.codigoSecretoAutomatico.push(caracter);\n        }\n        return this.codigoSecretoAutomatico;\n    }\n\n    generarCodigoVacioYLleno(numeroCaracteres, caracter){\n        let codigoAuxiliar = [];\n        for(var i = 0; i < numeroCaracteres; i++){\n            codigoAuxiliar.push(caracter);\n        }\n        return codigoAuxiliar;\n    }\n\n    generarCodigoSecretoPorDefault(numeroCaracteres, tipoCodigo, generarCodAut){\n        this.numeroIntentosRealizados = 0;\n        if(generarCodAut){\n            return this.generarCodigoSecretoAut(numeroCaracteres, tipoCodigo);\n        }\n        else{\n            this.codigoSecretoAutomatico = this.generarCodigoVacioYLleno(numeroCaracteres, \"\")\n            return this.codigoSecretoAutomatico;\n        }\n    }\n\n    generarVacas(codigoSecreto, intentoCodigo, resultadoDeIntento){\n        for(var  intCod= 0; intCod < intentoCodigo.length; intCod++){\n            for(var codSec = 0; codSec < codigoSecreto.length; codSec++){\n                if(!this.listaRepetidos[codSec]){\n                    if(codigoSecreto[codSec] == intentoCodigo[intCod]){\n                        this.listaRepetidos[codSec] = true;\n                        resultadoDeIntento[intCod] = \"V\";\n                        break;\n                    }\n                }\n            }\n        }\n        return resultadoDeIntento;\n    }\n\n    generarToros(codigoSecreto, intentoCodigo, resultadoDeIntento){\n        this.listaRepetidos = [];\n        this.numeroToros = 0;\n        this.listaRepetidos = this.generarCodigoVacioYLleno(codigoSecreto.length, false);\n        for(var  i= 0; i < intentoCodigo.length; i++){\n            if(codigoSecreto[i] == intentoCodigo[i]){\n                this.listaRepetidos[i] = true;\n                resultadoDeIntento[i] = \"T\";\n                this.numeroToros++;\n            }\n        }\n        return resultadoDeIntento;\n    }\n\n    esTernera(codigoSecreto, intentoCodigo, pos){\n        return codigoSecreto[pos] == intentoCodigo[pos]-1 || codigoSecreto[pos] == intentoCodigo[pos]+1;\n    }\n\n    generarTernera(codigoSecreto, intentoCodigo, resultadoDeIntento){\n        this.listaRepetidos = this.generarCodigoVacioYLleno(codigoSecreto.length, false);\n        for(var  i= 0; i < intentoCodigo.length; i++){\n            if(this.esTernera(codigoSecreto,intentoCodigo,i)){\n                resultadoDeIntento[i] = \"#\";\n            }\n        }\n        return resultadoDeIntento;\n    }\n\n    esError(resultadoIntento){\n        return typeof(resultadoIntento) == \"string\";\n    }\n\n    generarResultadoDeIntento(numeroCaracteres, resultadoIntento, codigoSecreto, intentoCodigo){\n        if(!this.esError(resultadoIntento)){\n            resultadoIntento = this.generarCodigoVacioYLleno(numeroCaracteres, \"O\");\n            resultadoIntento = this.generarTernera(codigoSecreto, intentoCodigo, resultadoIntento);\n            resultadoIntento = this.generarToros(codigoSecreto, intentoCodigo, resultadoIntento);\n            resultadoIntento = this.generarVacas(codigoSecreto, intentoCodigo, resultadoIntento);\n            this.numeroIntentosRealizados++;\n        }\n        return resultadoIntento;\n    }\n\n    generarIntentosRealizados(numeroIntentos){\n        let intentosRealizados = `${this.numeroIntentosRealizados} / ${numeroIntentos} Intentos`;\n        return intentosRealizados;\n    }\n\n    sonTodosToros(numeroCaracteres){\n        return this.numeroToros == numeroCaracteres;\n    }\n\n    seCumplioLosIntentos(numeroIntentos){\n        return this.numeroIntentosRealizados == numeroIntentos;\n    }\n\n    comprobarGanador(numeroCaracteres, numeroIntentos){\n        if(this.sonTodosToros(numeroCaracteres)){\n            return \"Ganador\";\n        }\n        if(this.seCumplioLosIntentos(numeroIntentos)){\n            return \"Perdedor\";\n        }\n        return \"Continua\";\n    }\n}\n\nexport default FuncionesDeJuego;","class ExcepcionesVacasToros{\n\n    constructor(){\n        this.limiteInferior = 1;\n        this.limiteSuperior = 10;\n    }\n    \n    controlarCantidadDeCaracteres(numeroCaracteres){\n        if (numeroCaracteres < this.limiteInferior || numeroCaracteres > this.limiteSuperior){\n            numeroCaracteres = \"Número incorrecto de caracteres. Intente otra vez por favor\";\n        }\n        return numeroCaracteres;\n    }\n\n    controlarCantidadDeIntentos(numeroIntentos){\n        if (numeroIntentos < this.limiteInferior){\n            numeroIntentos = \"Número incorrecto de intentos. Intente otra vez por favor\";\n        }\n        return numeroIntentos;\n    }\n\n    esCodigoSecretoCompleto(codigoSecreto, numeroCaracteres){\n        for (var i = 0; i < numeroCaracteres; i++){\n            if(this.esCaracterVacio(codigoSecreto[i])){\n                return false;\n            }\n        }\n        return true;\n    }\n\n    esCaracterVacio(caracter){\n        return caracter == \"\" || caracter == undefined;\n    }\n\n    esCaracterNumerico(caracter){\n        let numero = parseInt(caracter);\n        return !isNaN(numero);\n    }\n\n    esCaracterLetra(caracter){\n        let ascii = caracter.toUpperCase().charCodeAt(0);\n        return ascii > 64 && ascii < 91;\n    }\n\n    esCaracterCombinado(caracter){\n        return this.esCaracterLetra(caracter) || this.esCaracterNumerico(caracter);\n    }\n\n    esNumeroOLetra(caracter, tipoCod){\n        if(tipoCod == \"Numeros\"){\n            return this.esCaracterNumerico(caracter);\n        }\n        else{\n            if(tipoCod == \"Letras\"){\n                return this.esCaracterLetra(caracter);\n            }\n            return this.esCaracterCombinado(caracter);\n        }\n    }\n\n    controlarTipoCaracteresCodigoSecreto(codigoSecreto, numeroCaracteres, tipoCodigo){\n        let numeroLetra;\n        for(var i = 0; i < numeroCaracteres; i++){\n            numeroLetra = this.esNumeroOLetra(codigoSecreto[i], tipoCodigo);\n            if(!numeroLetra){\n                return `Código secreto inválido. La configuración del juego es de Tipo: ${tipoCodigo}`;\n            }\n        }\n        return codigoSecreto;\n    }\n\n    controlarCodigoSecreto(codigoSecreto, numeroCaracteres, tipoCodigo){\n        if(!this.esCodigoSecretoCompleto(codigoSecreto, numeroCaracteres)){\n            return \"Código secreto incompleto\";\n        }\n        return this.controlarTipoCaracteresCodigoSecreto(codigoSecreto, numeroCaracteres, tipoCodigo);\n    }\n}\n\nexport default ExcepcionesVacasToros;","import VacasToros from './VacasToros'\nimport { getVista1, getVista2, getVista2Historial , getVista3, getVista4, volverAJugar} from './vistas';\n\nconst formConfiguracion = document.querySelector(\"#vista-1-form\");\nconst formCodigoSecreto = document.querySelector(\"#codigo-secreto-form\");\nconst formIntentosCodigoSecreto = document.querySelector(\"#intentos-codigo-secreto-form\");\nconst formReiniciar = document.querySelector(\"#reiniciar-form\");\nconst div = document.querySelector(\"#visualizaciones\");\nconst divHistorialIntentos = document.querySelector(\"#historial-intentos\");\n\nconst inputNumeroCaracteres = document.querySelector(\"#numero-caracteres\");\nconst inputNumeroIntentos = document.querySelector(\"#numero-intentos\");\nconst inputTipoCodigo = document.querySelector(\"#tipo-codigo\");\nconst inputCodigoAutomatico = document.querySelector(\"#automatico\");\n\nlet vacasToros = new VacasToros();\nlet codigoSecreto = [];\nlet intento = [];\nlet resultadoDeIntento = [];\nlet numeroIntentosRealizados;\nlet historialIntentos = \"\";\nlet numeroCaracteres;\n\n\nfunction mostrarFormCodigoSecreto(numeroCar){\n  let codigoSecretoDefault = vacasToros.getCodigoSecreto();\n\n  let formText = `<label for=\"codigo-1\">Código secreto: </label>`;\n  for(var i=0; i<numeroCar; i++){\n    formText += `<input type=\"text\" class=\"caracter\" size=\"1\" maxlength=\"1\" value=\"${codigoSecretoDefault[i]}\">`;\n  }\n  formText += `<input type=\"submit\" value=\"Jugar\"/>   `;\n  formCodigoSecreto.innerHTML = formText;\n}\n\nfunction limpiarVista(vista){\n  switch(vista){\n    case 1:{formCodigoSecreto.innerHTML = \"\"; formConfiguracion.innerHTML = \"\"; div.innerHTML = \"\"; break;}\n    case 2:{formIntentosCodigoSecreto.innerHTML = \"\"; divHistorialIntentos.innerHTML = \"\"; div.innerHTML = \"\"; break;}\n    case 3:{formIntentosCodigoSecreto.innerHTML = \"\"; divHistorialIntentos.innerHTML = \"\"; div.innerHTML = \"\"; break;}\n    case 4:{formIntentosCodigoSecreto.innerHTML = \"\"; divHistorialIntentos.innerHTML = \"\"; div.innerHTML = \"\"; break;}\n  }\n}\n\nfunction mostrarVista(vista){\n  switch(vista){\n    case 1:{formCodigoSecreto.innerHTML = getVista1(); break;}\n    case 2:{formIntentosCodigoSecreto.innerHTML = getVista2(numeroCaracteres, numeroIntentosRealizados); divHistorialIntentos.innerHTML = historialIntentos; div.innerHTML = \"\"; break;}\n    case 3:{formIntentosCodigoSecreto.innerHTML = getVista3(numeroCaracteres, numeroIntentosRealizados, codigoSecreto); divHistorialIntentos.innerHTML = historialIntentos; div.innerHTML = \"\"; formReiniciar.innerHTML = volverAJugar(); break;}\n    case 4:{formIntentosCodigoSecreto.innerHTML = getVista4(numeroCaracteres, numeroIntentosRealizados, codigoSecreto); divHistorialIntentos.innerHTML = historialIntentos; div.innerHTML = \"\"; formReiniciar.innerHTML = volverAJugar();break;}\n  }\n}\n\nfunction comprobarJuego(jugador){\n  if (jugador == \"Ganador\"){\n    limpiarVista(2);\n    mostrarVista(3);\n  }\n  if(jugador == \"Perdedor\"){\n    limpiarVista(2);\n    mostrarVista(4);\n  }\n}\n\n\nformConfiguracion.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  numeroCaracteres = inputNumeroCaracteres.value;\n  let numeroIntentos = inputNumeroIntentos.value;\n  let tipoCodigo = inputTipoCodigo.value;\n  let codigoAutomatico = inputCodigoAutomatico.checked;\n\n  vacasToros.definirConfiguracionTotal(numeroCaracteres, numeroIntentos, tipoCodigo, codigoAutomatico);\n  mostrarFormCodigoSecreto(numeroCaracteres);\n  div.innerHTML = \"\";\n});\n\n\nformCodigoSecreto.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  codigoSecreto = [];\n  let listaCaracteres = document.querySelectorAll(\".caracter\");\n\n  for(var i = 0; i < listaCaracteres.length; i++){\n    codigoSecreto.push(listaCaracteres[i].value);\n  }\n\n  vacasToros.definirCodigoSecreto(codigoSecreto);\n  let codigoSecretoFinal = vacasToros.getCodigoSecreto();\n\n\n  if(typeof(codigoSecretoFinal) == \"string\"){\n    div.innerHTML = `<p> CÓDIGO:  ${codigoSecretoFinal}</p>`;\n  }\n  else{\n    numeroIntentosRealizados = vacasToros.getIntentosRealizados();\n    limpiarVista(1);\n    mostrarVista(2);\n  }\n});\n\n\n\nformIntentosCodigoSecreto.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  intento = [];\n  resultadoDeIntento = [];\n  let listaCaracteres = document.querySelectorAll(\".caracter\");\n\n  for(var i = 0; i < listaCaracteres.length; i++){\n    intento.push(listaCaracteres[i].value);\n  }\n\n  vacasToros.definirIntento(intento);\n  numeroIntentosRealizados = vacasToros.getIntentosRealizados();\n  resultadoDeIntento = vacasToros.getResultadoDeIntento();\n  let comprobarGanador = vacasToros.comprobarJuego();\n\n  if(typeof(resultadoDeIntento) == \"string\"){\n    div.innerHTML = `<p> RESULTADO INTENTO:  ${resultadoDeIntento} </p>`;\n  }\n  else{\n    historialIntentos = getVista2Historial(intento, resultadoDeIntento, historialIntentos, numeroCaracteres);\n    mostrarVista(2);\n  }\n  comprobarJuego(comprobarGanador);\n});\n\nformReiniciar.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  location.reload();\n});","function getVista1(){\n    let vista1 = `<label for=\"numero-caracteres\">Número de Caracteres:</label>\n    <input type=\"number\" id=\"numero-caracteres\" min=\"1\" max=\"10\"/><br><br>\n    <label for=\"numero-intentos\">Número de Intentos:</label>\n    <input type=\"number\" id=\"numero-intentos\" min=\"1\" /><br><br>\n    <label for=\"tipo-codigo\">Tipo de Código:</label>\n    <select id=\"tipo-codigo\">\n        <option value=\"Numeros\">Números</option>\n        <option value=\"Letras\">Letras</option>\n        <option value=\"Combinado\">Combinado</option>\n    </select><br><br>\n    <label for=\"automatico\"> Generar Código Automático</label>\n    <input type=\"checkbox\" id=\"automatico\" value=\"si\"><br><br>\n\n    <input type=\"submit\" value=\"Aceptar\" />`;\n    return vista1;\n}\n\nfunction getVista2(numeroCar, nroIntentosRealizados){\n    let vista2 = `<br><br><label for=\"codigo-1\">Código secreto: </label>`;\n    for(var i=0; i<numeroCar; i++){\n      vista2 += `<input type=\"text\" class=\"caracter\" size=\"1\" maxlength=\"1\">`;\n    }\n    vista2 += `<input type=\"submit\" value=\"Adivinar\"/><br><br>`;\n    vista2 += `<p>${nroIntentosRealizados}</p><br><br>`;\n    return vista2;\n}\n\nfunction getVista2Historial(intento, resultado, historial, numeroCar){\n    for(var i=0; i<numeroCar; i++){\n        if(resultado[i] == \"V\"){\n            historial += `<input style=\"background-color: gold;\" type=\"text\" class=\"car\" size=\"1\" maxlength=\"1\" value=\"${intento[i]}\">`;\n        }\n        if(resultado[i] == \"T\"){\n            historial += `<input style=\"background-color: rgb(18, 235, 235);\" type=\"text\" class=\"car\" size=\"1\" maxlength=\"1\" value=\"${intento[i]}\">`;\n        }\n        if(resultado[i] == \"O\"){\n            historial += `<input style=\"background-color: white;\" type=\"text\" class=\"car\" size=\"1\" maxlength=\"1\" value=\"${intento[i]}\">`;\n        }\n    }\n    historial += \"<br><br>\";\n    return historial;\n}\n\nfunction getVista3(numeroCar, nroIntentosRealizados, codigo){\n    let vista3 = `<br><br><h1>GANADOR!</h1><br><br><label for=\"codigo-1\">Código secreto: </label>`;\n    for(var i=0; i<numeroCar; i++){\n      vista3 += `<input style=\"background-color: rgb(18, 235, 235); type=\"text\" class=\"caracter\" size=\"1\" maxlength=\"1\" value=\"${codigo[i]}\">`;\n    }\n    vista3 += `<p>${nroIntentosRealizados}</p><br><br>`;\n    return vista3;\n}\n\nfunction getVista4(numeroCar, nroIntentosRealizados, codigo){\n    let vista4 = `<br><br><h1>PERDEDOR!</h1><br><br><label for=\"codigo-1\">Código secreto: </label>`;\n    for(var i=0; i<numeroCar; i++){\n      vista4 += `<input style=\"background-color: rgb(235, 18, 123); type=\"text\" class=\"caracter\" size=\"1\" maxlength=\"1\" value=\"${codigo[i]}\">`;\n    }\n    vista4 += `<p>${nroIntentosRealizados}</p><br><br>`;\n    return vista4;\n}\n\nfunction volverAJugar(){\n    let botton = `<input type=\"submit\" value=\"Volver a Jugar\"/>`;\n    return botton;\n}\n\nexport {getVista1, getVista2, getVista2Historial, getVista3, getVista4, volverAJugar}"],"names":["$d74219092068a106$var$_funcionesJuegoVacasToros","$d74219092068a106$var$_interopRequireDefault","parcelRequire","$d74219092068a106$var$_excepcionesVacasToros","VacasToros","$d74219092068a106$var$_classCallCheck","this","numeroCaracteres","numeroIntentos","tipoDeCodigo","generarCodigoAutomatico","intentosRealizados","codigoSecreto","intentoCodigo","resultadoDeIntento","Excepciones","ExcepcionesVacasToros","FuncionesJuego","FuncionesDeJuego","value","numeroCar","controlarCantidadDeCaracteres","numeroInt","controlarCantidadDeIntentos","tipoCod","genAutomatico","generarCodigoSecretoPorDefault","codigoSec","convertirCodigoSecretoMayusculas","controlarCodigoSecreto","generarIntentosRealizados","nroCaracteres","tipCodigo","definirNumeroDeCaracteres","definirNumeroDeIntentos","definirTipoDeCodigo","definirGeneracionDeCodigoAutomatico","definirCodigoSecretoPorDefault","definirIntentosRealizados","definirResultadoDeIntento","generarResultadoDeIntento","comprobarGanador","$862dc70cf5a09af1$var$_classCallCheck","numeroIntentosRealizados","numeroToros","codigoSecretoAutomatico","listaRepetidos","i","length","toString","toUpperCase","Math","floor","random","alphabet","generarCaracterLetra","generarCaracterNumerico","tipoCodigo","caracter","generarCaracterLetraNumero","push","codigoAuxiliar","generarCodAut","generarCodigoSecretoAut","generarCodigoVacioYLleno","intCod","codSec","pos","esTernera","resultadoIntento","esError","generarTernera","generarToros","generarVacas","concat","sonTodosToros","seCumplioLosIntentos","$7bdd0c65afca2cff$var$_classCallCheck","limiteInferior","limiteSuperior","esCaracterVacio","undefined","numero","parseInt","isNaN","ascii","charCodeAt","esCaracterLetra","esCaracterNumerico","esCaracterCombinado","esNumeroOLetra","esCodigoSecretoCompleto","controlarTipoCaracteresCodigoSecreto","$89b0829c857563b6$var$_VacasToros","nroIntentosRealizados","vista2","intento","resultado","historial","codigo","vista3","vista4","formConfiguracion","document","querySelector","formCodigoSecreto","formIntentosCodigoSecreto","formReiniciar","div","divHistorialIntentos","inputNumeroCaracteres","inputNumeroIntentos","inputTipoCodigo","inputCodigoAutomatico","vacasToros","historialIntentos","limpiarVista","vista","innerHTML","mostrarVista","$afd524e8fe64b7b4$exports","getVista1","getVista2","getVista3","volverAJugar","getVista4","addEventListener","event","preventDefault","codigoAutomatico","checked","definirConfiguracionTotal","codigoSecretoDefault","getCodigoSecreto","formText","mostrarFormCodigoSecreto","listaCaracteres","querySelectorAll","definirCodigoSecreto","codigoSecretoFinal","getIntentosRealizados","definirIntento","getResultadoDeIntento","jugador","comprobarJuego","getVista2Historial","location","reload"],"version":3,"file":"index.7c65569f.js.map"}